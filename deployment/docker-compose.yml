version: '3.8'

services:
  # Backend API
  api:
    build:
      context: ./be
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=warranty_db;Username=warranty_user;Password=warranty_pass
    depends_on:
      - postgres
    volumes:
      - ./be:/app
      - /app/be/BE.API/bin
      - /app/be/BE.API/obj
    networks:
      - warranty-network

  # Frontend React App
  frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    volumes:
      - ./fe:/app
      - /app/node_modules
    networks:
      - warranty-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: warranty_db
      POSTGRES_USER: warranty_user
      POSTGRES_PASSWORD: warranty_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - warranty-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    networks:
      - warranty-network

  # Redis for Caching (Optional)
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - warranty-network

volumes:
  postgres_data:

networks:
  warranty-network:
    driver: bridge
